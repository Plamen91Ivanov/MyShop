@using Shop.Common
@model Shop.Web.ViewModels.Create.ProductsInputModel

@{ this.ViewData["Title"] = "Home Page"; }

<div class="text-center">
    <h1>Категории</h1>
</div>
<div class="text-center bg-light test">
    <h1>Обяви</h1>
    <div class="row">
        @foreach (var product in Model.Products)
        {
             <div class="col-3">
                 <a href="/product/@product.Name">
                     <div class="card shadow p-3 mb-5 bg-white rounded">
                         @if (product.Image == null)
                         {
                            <img class="card-image" src="/Images/NoImages.jpg">
                         }
                         else
                         {
                            <img class="card-image rounded" src="http://res.cloudinary.com/ds1ne4hps/image/upload/@product.Image">
                         }
                         <div class="card-body">
                             <h5 class="card-title">@product.Name</h5>
                             <p class="card-text">@product.Description</p>
                             <p class="card-text">@product.Price $</p>
                         </div>
                     </div>
                 </a>
             </div>
         }
    </div>
</div>

<script>
    const container = document.getElementById('container');
    const loading = document.querySelector('.loading');
    let number = 0;
    let timerNumber = 0;

    getPost();

    window.addEventListener('scroll', () => {
        const { scrollTop, scrollHeight, clientHeight } = document.documentElement;

        console.log('what');
        if (clientHeight + scrollTop >= scrollHeight - 5) {
            // show the loading animation
            if (timerNumber == 0) {
                showLoading();
                timerNumber++;
            }
        }
    });

    function timer() {
        for (let index = 1; index < 300; index++) {
            timerNumber = index;
        }
        timerNumber = 0;
    }

    function showLoading() {
        loading.classList.add('show');

        // load more data
        setTimeout(getPost, 3000)
    }

    async function getPost() {
        //const postResponse = await fetch(`https://jsonplaceholder.typicode.com/posts/${getRandomNr()}`);
        const postResponse = await fetch(`https://localhost:44319/api/message/${number}`);
        number++;
        console.log(number);
        const postData = await postResponse.json();
        const userResponse = await fetch('https://randomuser.me/api');
        const userData = await userResponse.json();

        // const data = { post: postData, user: userData.results[0] };
        const data = postData;

        console.log(data);

        addDataToDOM(data);
    }

    function getRandomNr() {
        let randomNumber = 1;
        randomNumber++;
        console.log(randomNumber)
        return randomNumber
    }

    function addDataToDOM(data) {

        for (let message of data) {
            const postElement = document.createElement('div');
            postElement.classList.add('blog-post');


            postElement.innerHTML = `
		<h2 class="title">${message.content}</h2>
	`;
            container.appendChild(postElement);
        }
        loading.classList.remove('show');
    }
</script>

